Below is an example README for the MindViz project:

---

# MindViz

MindViz is an interactive mind map visualization tool that lets users dynamically create, edit, delete, and style nodes on an infinite canvas. It features a radial layout, smooth panning, re-centering, and custom modal dialogs for editing node attributes.

## Features

- **Radial Layout:** Automatically positions nodes in a circular layout based on depth.
- **Infinite Canvas:** Panning and auto-expanding canvas to accommodate large maps.
- **Node Interaction:** 
  - Add, edit, and delete nodes via modals.
  - Edit node style including background colors.
- **Re-center Button:** Quickly recenter the view on the root node.
- **Playwright Testing:** End-to-end tests to verify the visualization and node operations.

## Installation

1. **Clone the Repository:**

   ````bash
   npm i mindviz
   ````


## Build

Compile the TypeScript sources and copy declaration files by running:

````bash
npm run build
````

The compiled JavaScript and types will be available in the dist folder.

## Run

You can start the application (if running a sample HTML page) by executing:

````bash
npm start
````

Make sure the appropriate HTML file (e.g., index.html) is configured to load the compiled code.

## Testing

MindViz uses Playwright for browser-based tests. To run the tests:

````bash
npm run test
````

The tests cover rendering, adding, editing, deleting nodes, and canvas panning.

## Usage

MindViz can be used as a standalone web application or integrated into React projects. For React usage, you can construct a `VisualMindMap` instance using the static `fromReactRef` method.

Example snippet for React integration:

````typescript
import React, { useRef, useEffect } from "react";
import { VisualMindMap } from "./src/visualMindmap";
import { MindMap } from "./src/mindmap";

const MindVizComponent: React.FC = () => {
  const containerRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    if (containerRef.current) {
      const mindMap = new MindMap("Root");
      // Add nodes (if desired)
      const visualMindMap = VisualMindMap.fromReactRef(containerRef, mindMap);
      visualMindMap.render();
    }
  }, []);

  return <div ref={containerRef} style={{ width: "800px", height: "600px" }} />;
};

export default MindVizComponent;
````

## Configuration

- **TypeScript Configuration:**  
  The project uses a modern TS configuration targeting ES2020. You can adjust settings in tsconfig.json.

- **Dependencies:**  
  Ensure that Node.js (v14 or newer) is installed.

## License

MindViz is released under the ISC License.

